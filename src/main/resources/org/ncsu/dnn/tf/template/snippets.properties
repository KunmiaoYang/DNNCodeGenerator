indent = \t

py.with.scope = %swith %s(%s):\r\n

model.function.signature = \
def inception_v1(inputs, num_classes=%d, is_training=True, reuse=None, scope='%s'):\r\n

layer.single.snippet = \
%send_point = '%s'\r\n\
%s%s\r\n\
%send_points[end_point] = %s\r\n
layer.snippet.init = %send_point = '%s'\r\n
layer.snippet.add = %send_points[end_point] = %s\r\n

layer.conv.inline = %s%s = slim.conv2d(%s, %d, [%d, %d]%s, scope=%s)\r\n

layer.pool.inline = %s%s = slim.%s_pool2d(%s, [%d, %d]%s, scope=%s)\r\n

layer.concat.inline = %s%s = tf.concat(axis=%d, values=%s)\r\n

layer.softmax.inline = %send_points['%s'] = slim.softmax(%s, scope='%s')\r\n